import { NextRequest, NextResponse } from 'next/server';

// Process health messages using AI or predefined responses
async function processHealthMessage(message: string, language: string): Promise<string> {
  const lowerMessage = message.toLowerCase();
  
  // Check for specific health topics
  if (lowerMessage.includes('water') || lowerMessage.includes('purif') || lowerMessage.includes('drink')) {
    return multiLanguageResponses[language as keyof typeof multiLanguageResponses]?.waterSafety || multiLanguageResponses.en.waterSafety;
  }
  
  if (lowerMessage.includes('hand') || lowerMessage.includes('wash') || lowerMessage.includes('hygiene')) {
    return multiLanguageResponses[language as keyof typeof multiLanguageResponses]?.handHygiene || multiLanguageResponses.en.handHygiene;
  }
  
  if (lowerMessage.includes('symptom') || lowerMessage.includes('fever') || lowerMessage.includes('sick')) {
    return multiLanguageResponses[language as keyof typeof multiLanguageResponses]?.symptoms || multiLanguageResponses.en.symptoms;
  }
  
  if (lowerMessage.includes('emergency') || lowerMessage.includes('help') || lowerMessage.includes('contact')) {
    return multiLanguageResponses[language as keyof typeof multiLanguageResponses]?.emergency || multiLanguageResponses.en.emergency;
  }
  
  // Use Google Gemini AI if API key is available
  const geminiApiKey = process.env.GEMINI_API_KEY;
  if (geminiApiKey && geminiApiKey !== 'your_gemini_api_key') {
    try {
      const aiResponse = await generateAIHealthResponse(message, language, geminiApiKey);
      if (aiResponse && !aiResponse.includes('I apologize, but I cannot process')) {
        return aiResponse;
      }
    } catch (error) {
      console.error('Gemini AI error:', error);
      // Continue to fallback response
    }
  }
  
  // Default welcome message
  return multiLanguageResponses[language as keyof typeof multiLanguageResponses]?.welcome || multiLanguageResponses.en.welcome;
}

async function generateAIHealthResponse(message: string, language: string, apiKey: string): Promise<string> {
  try {
    // Add timeout and better error handling for serverless environment
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 8000); // 8 second timeout
    
    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${apiKey}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'HealthSurveillance/1.0'
      },
      body: JSON.stringify({
        contents: [{
          parts: [{
            text: `You are a healthcare assistant. Respond in ${language} language. User asks: "${message}". Provide helpful, accurate health information focusing on water safety, hygiene, disease prevention, and general health guidance. Keep responses concise and actionable.`
          }]
        }],
        generationConfig: {
          maxOutputTokens: 200,
          temperature: 0.7
        }
      }),
      signal: controller.signal
    });
    
    clearTimeout(timeoutId);
    
    if (!response.ok) {
      throw new Error(`Gemini API error: ${response.status}`);
    }
    
    const data = await response.json();
    return data.candidates?.[0]?.content?.parts?.[0]?.text || 'I apologize, but I cannot process your request at the moment. Please try asking about water safety, hygiene, or general health topics.';
  } catch (error) {
    console.error('Gemini API Error:', error);
    // Don't rethrow, return fallback instead
    return 'I apologize, but I cannot process your request at the moment. Please try asking about water safety, hygiene, or general health topics.';
  }
}

// Multi-language responses
const multiLanguageResponses = {
  en: {
    welcome: "ЁЯдЦ **Health Assistant Available**\n\nI'm here to help with:\nтАв Water safety and purification\nтАв Disease prevention and symptoms\nтАв Hygiene practices\nтАв Emergency health guidance\nтАв Community health information\n\nAsk me anything about health and safety!",
    waterSafety: "ЁЯТз **Water Safety Guidelines:**\n\nтАв Always boil water for 5-10 minutes\nтАв Use water purification tablets\nтАв Store water in clean containers\nтАв Avoid stagnant water sources\nтАв Regular water quality testing\n\nClean water prevents waterborne diseases like cholera and diarrhea.",
    handHygiene: "ЁЯз╝ **Hand Hygiene Steps:**\n\n1. Wet hands with clean water\n2. Apply soap and lather well\n3. Scrub for at least 20 seconds\n4. Rinse thoroughly\n5. Dry with clean towel\n\nWash hands before eating, after using toilet, and when caring for sick.",
    symptoms: "ЁЯй║ **Common Health Symptoms:**\n\nтЪая╕П **Seek immediate help for:**\nтАв High fever (>101┬░F)\nтАв Difficulty breathing\nтАв Severe headache\nтАв Persistent vomiting\nтАв Blood in stool/urine\n\nContact health center: 104 | Emergency: 108",
    emergency: "ЁЯЪи **Emergency Contacts:**\n\nтАв Health Helpline: 104\nтАв Emergency Services: 108\nтАв Ambulance: 102\nтАв Poison Control: 1066\n\nFor immediate medical emergency, call 108 or visit nearest hospital."
  },
  hi: {
    welcome: "ЁЯдЦ **рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╣рд╛рдпрдХ рдЙрдкрд▓рдмреНрдз**\n\nрдореИрдВ рдпрд╣рд╛рдБ рдорджрдж рдХреЗ рд▓рд┐рдП рд╣реВрдБ:\nтАв рдкрд╛рдиреА рдХреА рд╕реБрд░рдХреНрд╖рд╛ рдФрд░ рд╢реБрджреНрдзреАрдХрд░рдг\nтАв рд░реЛрдЧ рдХреА рд░реЛрдХрдерд╛рдо рдФрд░ рд▓рдХреНрд╖рдг\nтАв рд╕реНрд╡рдЪреНрдЫрддрд╛ рдкреНрд░рдерд╛рдПрдВ\nтАв рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕реНрд╡рд╛рд╕реНрдереНрдп рдорд╛рд░реНрдЧрджрд░реНрд╢рди\nтАв рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдЬрд╛рдирдХрд╛рд░реА\n\nрд╕реНрд╡рд╛рд╕реНрдереНрдп рдФрд░ рд╕реБрд░рдХреНрд╖рд╛ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдХреБрдЫ рднреА рдкреВрдЫреЗрдВ!",
    waterSafety: "ЁЯТз **рдкрд╛рдиреА рд╕реБрд░рдХреНрд╖рд╛ рджрд┐рд╢рд╛рдирд┐рд░реНрджреЗрд╢:**\n\nтАв рдкрд╛рдиреА рдХреЛ рд╣рдореЗрд╢рд╛ 5-10 рдорд┐рдирдЯ рддрдХ рдЙрдмрд╛рд▓реЗрдВ\nтАв рдкрд╛рдиреА рд╢реБрджреНрдзреАрдХрд░рдг рдЧреЛрд▓рд┐рдпреЛрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ\nтАв рдкрд╛рдиреА рдХреЛ рд╕рд╛рдл рдмрд░реНрддрдиреЛрдВ рдореЗрдВ рд░рдЦреЗрдВ\nтАв рд╕реНрдерд┐рд░ рдкрд╛рдиреА рдХреЗ рд╕реНрд░реЛрддреЛрдВ рд╕реЗ рдмрдЪреЗрдВ\nтАв рдирд┐рдпрдорд┐рдд рдкрд╛рдиреА рдХреА рдЧреБрдгрд╡рддреНрддрд╛ рдХреА рдЬрд╛рдВрдЪ\n\nрд╕рд╛рдл рдкрд╛рдиреА рд╣реИрдЬрд╛ рдФрд░ рджрд╕реНрдд рдЬреИрд╕реА рдЬрд▓ рдЬрдирд┐рдд рдмреАрдорд╛рд░рд┐рдпреЛрдВ рдХреЛ рд░реЛрдХрддрд╛ рд╣реИред",
    handHygiene: "ЁЯз╝ **рд╣рд╛рде рд╕реНрд╡рдЪреНрдЫрддрд╛ рдХреЗ рдЪрд░рдг:**\n\n1. рд╕рд╛рдл рдкрд╛рдиреА рд╕реЗ рд╣рд╛рде рдЧреАрд▓реЗ рдХрд░реЗрдВ\n2. рд╕рд╛рдмреБрди рд▓рдЧрд╛рдПрдВ рдФрд░ рдЕрдЪреНрдЫреА рддрд░рд╣ рдЭрд╛рдЧ рдмрдирд╛рдПрдВ\n3. рдХрдо рд╕реЗ рдХрдо 20 рд╕реЗрдХрдВрдб рддрдХ рд░рдЧрдбрд╝реЗрдВ\n4. рдЕрдЪреНрдЫреА рддрд░рд╣ рд╕реЗ рдзреЛрдПрдВ\n5. рд╕рд╛рдл рддреМрд▓рд┐рдП рд╕реЗ рд╕реБрдЦрд╛рдПрдВ\n\nрдЦрд╛рдиреЗ рд╕реЗ рдкрд╣рд▓реЗ, рд╢реМрдЪрд╛рд▓рдп рдХреЗ рдмрд╛рдж рдФрд░ рдмреАрдорд╛рд░ рдХреА рджреЗрдЦрднрд╛рд▓ рдХрд░рддреЗ рд╕рдордп рд╣рд╛рде рдзреЛрдПрдВред",
    symptoms: "ЁЯй║ **рд╕рд╛рдорд╛рдиреНрдп рд╕реНрд╡рд╛рд╕реНрдереНрдп рд▓рдХреНрд╖рдг:**\n\nтЪая╕П **рддреБрд░рдВрдд рдорджрдж рд▓реЗрдВ:**\nтАв рддреЗрдЬ рдмреБрдЦрд╛рд░ (>101┬░F)\nтАв рд╕рд╛рдВрд╕ рд▓реЗрдиреЗ рдореЗрдВ рдХрдард┐рдирд╛рдИ\nтАв рдЧрдВрднреАрд░ рд╕рд┐рд░рджрд░реНрдж\nтАв рд▓рдЧрд╛рддрд╛рд░ рдЙрд▓реНрдЯреА\nтАв рдорд▓/рдореВрддреНрд░ рдореЗрдВ рдЦреВрди\n\nрд╕реНрд╡рд╛рд╕реНрдереНрдп рдХреЗрдВрджреНрд░ рд╕рдВрдкрд░реНрдХ: 104 | рдЖрдкрд╛рддрдХрд╛рд▓: 108",
    emergency: "ЁЯЪи **рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕рдВрдкрд░реНрдХ:**\n\nтАв рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди: 104\nтАв рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕реЗрд╡рд╛рдПрдВ: 108\nтАв рдПрдореНрдмреБрд▓реЗрдВрд╕: 102\nтАв рдЬрд╣рд░ рдирд┐рдпрдВрддреНрд░рдг: 1066\n\nрддрддреНрдХрд╛рд▓ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЖрдкрд╛рддрдХрд╛рд▓ рдХреЗ рд▓рд┐рдП, 108 рдкрд░ рдХреЙрд▓ рдХрд░реЗрдВ рдпрд╛ рдирд┐рдХрдЯрддрдо рдЕрд╕реНрдкрддрд╛рд▓ рдЬрд╛рдПрдВред"
  },
  bn: {
    welcome: "ЁЯдЦ **рж╕рзНржмрж╛рж╕рзНржерзНржп рж╕рж╣рж╛ржпрж╝ржХ ржЙржкрж▓ржмрзНржз**\n\nржЖржорж┐ ржПржЦрж╛ржирзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржПрж╕рзЗржЫрж┐:\nтАв ржкрж╛ржирж┐рж░ ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржПржмржВ ржкрж░рж┐рж╢рзЛржзржи\nтАв рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржз ржПржмржВ ржЙржкрж╕рж░рзНржЧ\nтАв рж╕рзНржмрж╛рж╕рзНржерзНржпржмрж┐ржзрж┐ ржЕржирзБрж╢рзАрж▓ржи\nтАв ржЬрж░рзБрж░рж┐ рж╕рзНржмрж╛рж╕рзНржерзНржп ржирж┐рж░рзНржжрзЗрж╢ржирж╛\nтАв ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзНржмрж╛рж╕рзНржерзНржп рждржерзНржп\n\nрж╕рзНржмрж╛рж╕рзНржерзНржп ржПржмржВ ржирж┐рж░рж╛ржкрждрзНрждрж╛ рж╕ржорзНржкрж░рзНржХрзЗ ржпрзЗржХрзЛржирзЛ ржХрж┐ржЫрзБ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи!",
    waterSafety: "ЁЯТз **ржкрж╛ржирж┐рж░ ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛:**\n\nтАв рж╕рж░рзНржмржжрж╛ ржкрж╛ржирж┐ рзл-рззрзж ржорж┐ржирж┐ржЯ ржлрзБржЯрж╛ржи\nтАв ржкрж╛ржирж┐ ржкрж░рж┐рж╢рзЛржзржи ржЯрзНржпрж╛ржмрж▓рзЗржЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи\nтАв ржкрж╛ржирж┐ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржкрж╛рждрзНрж░рзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзБржи\nтАв рж╕рзНржерж┐рж░ ржкрж╛ржирж┐рж░ ржЙрзОрж╕ ржПржбрж╝рж┐ржпрж╝рзЗ ржЪрж▓рзБржи\nтАв ржирж┐ржпрж╝ржорж┐ржд ржкрж╛ржирж┐рж░ ржорж╛ржи ржкрж░рзАржХрзНрж╖рж╛\n\nржкрж░рж┐рж╖рзНржХрж╛рж░ ржкрж╛ржирж┐ ржХрж▓рзЗрж░рж╛ ржПржмржВ ржбрж╛ржпрж╝рж░рж┐ржпрж╝рж╛рж░ ржорждрзЛ ржкрж╛ржирж┐ржмрж╛рж╣рж┐ржд рж░рзЛржЧ ржкрзНрж░рждрж┐рж░рзЛржз ржХрж░рзЗред",
    handHygiene: "ЁЯз╝ **рж╣рж╛ржд рж╕рзНржмрж╛рж╕рзНржерзНржпржмрж┐ржзрж┐ ржзрж╛ржк:**\n\nрзз. ржкрж░рж┐рж╖рзНржХрж╛рж░ ржкрж╛ржирж┐ ржжрж┐ржпрж╝рзЗ рж╣рж╛ржд ржнрж┐ржЬрж╛ржи\nрзи. рж╕рж╛ржмрж╛ржи рж▓рж╛ржЧрж╛ржи ржПржмржВ ржнрж╛рж▓рзЛ ржХрж░рзЗ ржлрзЗржирж╛ рждрзБрж▓рзБржи\nрзй. ржХржоржкржХрзНрж╖рзЗ рзирзж рж╕рзЗржХрзЗржирзНржб ржШрж╖рзБржи\nрзк. ржнрж╛рж▓рзЛржнрж╛ржмрзЗ ржзрзБржпрж╝рзЗ ржлрзЗрж▓рзБржи\nрзл. ржкрж░рж┐рж╖рзНржХрж╛рж░ рждрзЛржпрж╝рж╛рж▓рзЗ ржжрж┐ржпрж╝рзЗ рж╢рзБржХрж╛ржи\n\nржЦрж╛ржУржпрж╝рж╛рж░ ржЖржЧрзЗ, ржЯржпрж╝рж▓рзЗржЯ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржкрж░ ржПржмржВ ржЕрж╕рзБрж╕рзНржерзЗрж░ ржпрждрзНржи ржирзЗржУржпрж╝рж╛рж░ рж╕ржоржпрж╝ рж╣рж╛ржд ржзрзБржпрж╝рзЗ ржирж┐ржиред",
    symptoms: "ЁЯй║ **рж╕рж╛ржзрж╛рж░ржг рж╕рзНржмрж╛рж╕рзНржерзНржп ржЙржкрж╕рж░рзНржЧ:**\n\nтЪая╕П **рждрзОржХрзНрж╖ржгрж╛рзО рж╕рж╛рж╣рж╛ржпрзНржп ржирж┐ржи:**\nтАв ржЙржЪрзНржЪ ржЬрзНржмрж░ (>рззрзжрзз┬░ржлрж╛)\nтАв рж╢рзНржмрж╛рж╕ржХрж╖рзНржЯ\nтАв рждрзАржмрзНрж░ ржорж╛ржерж╛ржмрзНржпржерж╛\nтАв ржХрзНрж░ржорж╛ржЧржд ржмржорж┐\nтАв ржорж▓/ржкрзНрж░рж╕рзНрж░рж╛ржмрзЗ рж░ржХрзНржд\n\nрж╕рзНржмрж╛рж╕рзНржерзНржп ржХрзЗржирзНржжрзНрж░ ржпрзЛржЧрж╛ржпрзЛржЧ: рззрзжрзк | ржЬрж░рзБрж░рж┐: рззрзжрзо",
    emergency: "ЁЯЪи **ржЬрж░рзБрж░рж┐ ржпрзЛржЧрж╛ржпрзЛржЧ:**\n\nтАв рж╕рзНржмрж╛рж╕рзНржерзНржп рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзжрзк\nтАв ржЬрж░рзБрж░рж┐ рж╕рзЗржмрж╛: рззрзжрзо\nтАв ржЕрзНржпрж╛ржорзНржмрзБрж▓рзЗржирзНрж╕: рззрзжрзи\nтАв ржмрж┐рж╖ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг: рззрзжрзмрзм\n\nрждрж╛рзОржХрзНрж╖ржгрж┐ржХ ржЪрж┐ржХрж┐рзОрж╕рж╛ ржЬрж░рзБрж░рж┐ ржЕржмрж╕рзНржерж╛рж░ ржЬржирзНржп рззрзжрзо ржиржорзНржмрж░рзЗ ржХрж▓ ржХрж░рзБржи ржмрж╛ ржирж┐ржХржЯрждржо рж╣рж╛рж╕ржкрж╛рждрж╛рж▓рзЗ ржпрж╛ржиред"
  },
  es: {
    welcome: "ЁЯдЦ **Asistente de Salud Disponible**\n\nEstoy aqu├н para ayudar con:\nтАв Seguridad y purificaci├│n del agua\nтАв Prevenci├│n de enfermedades y s├нntomas\nтАв Pr├бcticas de higiene\nтАв Orientaci├│n de salud de emergencia\nтАв Informaci├│n de salud comunitaria\n\n┬бPreg├║ntame cualquier cosa sobre salud y seguridad!",
    waterSafety: "ЁЯТз **Pautas de Seguridad del Agua:**\n\nтАв Hierve siempre el agua durante 5-10 minutos\nтАв Usa tabletas de purificaci├│n de agua\nтАв Almacena agua en recipientes limpios\nтАв Evita fuentes de agua estancada\nтАв Pruebas regulares de calidad del agua\n\nEl agua limpia previene enfermedades transmitidas por el agua como c├│lera y diarrea.",
    handHygiene: "ЁЯз╝ **Pasos de Higiene de Manos:**\n\n1. Moja las manos con agua limpia\n2. Aplica jab├│n y haz espuma\n3. Frota durante al menos 20 segundos\n4. Enjuaga completamente\n5. Seca con toalla limpia\n\nL├бvate las manos antes de comer, despu├йs de usar el ba├▒o y al cuidar enfermos.",
    symptoms: "ЁЯй║ **S├нntomas de Salud Comunes:**\n\nтЪая╕П **Busca ayuda inmediata para:**\nтАв Fiebre alta (>38.3┬░C)\nтАв Dificultad para respirar\nтАв Dolor de cabeza severo\nтАв V├│mito persistente\nтАв Sangre en heces/orina\n\nContacta centro de salud: 104 | Emergencia: 108",
    emergency: "ЁЯЪи **Contactos de Emergencia:**\n\nтАв L├нnea de Salud: 104\nтАв Servicios de Emergencia: 108\nтАв Ambulancia: 102\nтАв Control de Venenos: 1066\n\nPara emergencia m├йdica inmediata, llama al 108 o visita el hospital m├бs cercano."
  },
  fr: {
    welcome: "ЁЯдЦ **Assistant Sant├й Disponible**\n\nJe suis l├а pour aider avec:\nтАв S├йcurit├й et purification de l'eau\nтАв Pr├йvention des maladies et sympt├┤mes\nтАв Pratiques d'hygi├иne\nтАв Conseils de sant├й d'urgence\nтАв Informations de sant├й communautaire\n\nDemandez-moi n'importe quoi sur la sant├й et la s├йcurit├й!",
    waterSafety: "ЁЯТз **Directives de S├йcurit├й de l'Eau:**\n\nтАв Faites toujours bouillir l'eau 5-10 minutes\nтАв Utilisez des comprim├йs de purification\nтАв Stockez l'eau dans des r├йcipients propres\nтАв ├Йvitez les sources d'eau stagnante\nтАв Tests r├йguliers de qualit├й de l'eau\n\nL'eau propre pr├йvient les maladies hydriques comme le chol├йra et la diarrh├йe.",
    handHygiene: "ЁЯз╝ **├Йtapes d'Hygi├иne des Mains:**\n\n1. Mouillez les mains avec de l'eau propre\n2. Appliquez du savon et faites mousser\n3. Frottez pendant au moins 20 secondes\n4. Rincez soigneusement\n5. S├йchez avec une serviette propre\n\nLavez-vous les mains avant de manger, apr├иs les toilettes et en soignant les malades.",
    symptoms: "ЁЯй║ **Sympt├┤mes de Sant├й Courants:**\n\nтЪая╕П **Cherchez de l'aide imm├йdiate pour:**\nтАв Fi├иvre ├йlev├йe (>38.3┬░C)\nтАв Difficult├й ├а respirer\nтАв Mal de t├кte s├йv├иre\nтАв Vomissement persistant\nтАв Sang dans selles/urine\n\nContactez centre de sant├й: 104 | Urgence: 108",
    emergency: "ЁЯЪи **Contacts d'Urgence:**\n\nтАв Ligne Sant├й: 104\nтАв Services d'Urgence: 108\nтАв Ambulance: 102\nтАв Contr├┤le des Poisons: 1066\n\nPour urgence m├йdicale imm├йdiate, appelez le 108 ou visitez l'h├┤pital le plus proche."
  }
};

export async function POST(request: NextRequest) {
  let body: any = {};
  let message = '';
  let language = 'en';
  
  try {
    body = await request.json();
    message = body.message || '';
    language = body.language || 'en';
  } catch (parseError) {
    console.error('JSON parse error:', parseError);
    return NextResponse.json({
      response: generateFallbackResponse('', 'en'),
      category: 'error',
      confidence: 0.1,
      language: 'en',
      suggestions: generateSuggestions('en'),
      timestamp: new Date().toISOString()
    });
  }
  
  try {
    // Process message directly using AI (Google Gemini)
    const response = await processHealthMessage(message, language);
    
    return NextResponse.json({
      response: response,
      category: 'health',
      confidence: 0.9,
      language,
      suggestions: generateSuggestions(language),
      timestamp: new Date().toISOString()
    });
    
  } catch (error) {
    console.error('Chatbot API error:', error);
    
    return NextResponse.json({
      response: generateFallbackResponse(message, language),
      category: 'fallback',
      confidence: 0.6,
      language,
      suggestions: generateSuggestions(language)
    });
  }
}

function generateSuggestions(language: string): string[] {
  const suggestions = {
    en: [
      'Contact health helpline: 104',
      'Call emergency: 108',
      'Visit health center'
    ],
    hi: [
      'рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╣реЗрд▓реНрдкрд▓рд╛рдЗрди: 104',
      'рдЖрдкрд╛рддрдХрд╛рд▓ рдХреЙрд▓: 108',
      'рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХреЗрдВрджреНрд░ рдЬрд╛рдПрдВ'
    ],
    bn: [
      'рж╕рзНржмрж╛рж╕рзНржерзНржп рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи: рззрзжрзк',
      'ржЬрж░рзБрж░рж┐ ржХрж▓: рззрзжрзо',
      'рж╕рзНржмрж╛рж╕рзНржерзНржп ржХрзЗржирзНржжрзНрж░ ржпрж╛ржи'
    ],
    es: [
      'L├нnea de salud: 104',
      'Emergencia: 108',
      'Visita centro de salud'
    ],
    fr: [
      'Ligne sant├й: 104',
      'Urgence: 108',
      'Visitez centre de sant├й'
    ]
  };
  
  return suggestions[language as keyof typeof suggestions] || suggestions.en;
}

function generateFallbackResponse(message: string, language: string = 'en'): string {
  const responses = multiLanguageResponses[language as keyof typeof multiLanguageResponses] || multiLanguageResponses.en;
  
  // Return welcome message if no message provided
  if (!message) {
    return responses.welcome;
  }
  
  const lowercaseMessage = message.toLowerCase();
  
  // Analyze message for specific health topics
  if (lowercaseMessage.includes('water') || lowercaseMessage.includes('рдкрд╛рдиреА') || lowercaseMessage.includes('ржкрж╛ржирж┐')) {
    return responses.waterSafety;
  }
  
  if (lowercaseMessage.includes('hand') || lowercaseMessage.includes('hygiene') || 
      lowercaseMessage.includes('рд╣рд╛рде') || lowercaseMessage.includes('рд╕реНрд╡рдЪреНрдЫрддрд╛') ||
      lowercaseMessage.includes('рж╣рж╛ржд') || lowercaseMessage.includes('рж╕рзНржмрж╛рж╕рзНржерзНржпржмрж┐ржзрж┐')) {
    return responses.handHygiene;
  }
  
  if (lowercaseMessage.includes('symptom') || lowercaseMessage.includes('sick') ||
      lowercaseMessage.includes('рд▓рдХреНрд╖рдг') || lowercaseMessage.includes('рдмреАрдорд╛рд░') ||
      lowercaseMessage.includes('ржЙржкрж╕рж░рзНржЧ') || lowercaseMessage.includes('ржЕрж╕рзБрж╕рзНрже')) {
    return responses.symptoms;
  }
  
  if (lowercaseMessage.includes('emergency') || lowercaseMessage.includes('help') ||
      lowercaseMessage.includes('рдЖрдкрд╛рддрдХрд╛рд▓') || lowercaseMessage.includes('рдорджрдж') ||
      lowercaseMessage.includes('ржЬрж░рзБрж░рж┐') || lowercaseMessage.includes('рж╕рж╛рж╣рж╛ржпрзНржп')) {
    return responses.emergency;
  }

  // Return appropriate response based on message content and language
  return responses.welcome;
}